name: Shopify App CI

on:
  push:
    branches: 
      - main
      - develop
      - 'feature/**'
      - 'bugfix/**'
  pull_request:
    branches: 
      - main
      - develop

jobs:
  lint-and-test:
    name: Lint and Test
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [20.10.0]
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install Dependencies
      run: |
        npm ci
        npm install --save-dev eslint @shopify/eslint-plugin
    
    - name: Run ESLint
      run: |
        npx eslint . \
          --ext .js,.jsx,.ts,.tsx \
          --format github
      continue-on-error: false
    
    - name: Run Shopify App Linter
      run: |
        npx shopify app lint
      continue-on-error: true
    
    - name: Run Type Checks
      run: npm run typecheck
    
    - name: Run Unit Tests
      run: |
        npm test -- \
          --ci \
          --reporters=default \
          --reporters=jest-junit \
          --coverage
      env:
        CI: true
    
    - name: Upload Test Coverage
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: coverage
        retention-days: 7
    
    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: junit.xml
        retention-days: 7
    
    - name: Publish Test Results
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: Jest Test Results
        path: junit.xml
        reporter: jest-junit
        fail-on-error: 'false'
    
    - name: Check Shopify App Configuration
      run: |
        npx shopify app config validate
      continue-on-error: true

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    
    - name: Run Npm Audit
      run: npm audit --audit-level=high
      continue-on-error: true
    

  compatibility-check:
    name: Compatibility Check
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x, 21.x]
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install Dependencies
      run: npm ci
    
    - name: Run Compatibility Tests
      run: npm test
      continue-on-error: true

# Optional: Slack or Discord Notification
# Uncomment and configure as needed
# - name: Notify Slack
#   if: failure()
#   uses: 8398a7/action-slack@v3
#   with:
#     status: ${{ job.status }}
#     fields: repo,message,commit,author,action,eventName,ref,workflow
#   env:
#     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
