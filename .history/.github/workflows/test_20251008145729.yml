name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [20.10.0]
        # Add more Node.js versions if needed
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Clean npm cache
      run: npm cache clean --force
    
    - name: Remove node_modules and package-lock.json
      run: |
        rm -rf node_modules
        rm -f package-lock.json
    
    - name: Install dependencies
      run: |
        npm install
        npm install --save-dev jest-junit
    
    - name: Run linter
      run: npm run lint || true
    
    - name: Run tests
      run: |
        npm test -- --ci --reporters=default --reporters=jest-junit
        env:
        JEST_JUNIT_OUTPUT: junit.xml     # ðŸ‘ˆ ensures file is created at root
      continue-on-error: true
    
    - name: Upload test coverage
      uses: actions/upload-artifact@v4
      with:
        name: test-coverage
        path: coverage
        retention-days: 5
    
    - name: Upload test report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-report
        path: junit.xml
        retention-days: 5
    
    - name: Create test report
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: Jest Test Report
        path: junit.xml
        reporter: jest-junit
        fail-on-error: 'false'
